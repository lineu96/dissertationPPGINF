geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
#---------------------------------------------------------------
g1 <- ggplot(data = res_pred, aes(y=pearson,x=index))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('')+
ylab('Índice') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=index))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('Índice')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
dados_dissertacao$pred_yale <- res_pred$preditos[1:nrow(dados_dissertacao)]
dados_dissertacao$pred_YFAS <- res_pred$preditos[1:nrow(dados_dissertacao)]
dados_dissertacao$pred_BES <- res_pred$preditos[(nrow(dados_dissertacao)+1):nrow(res_pred)]
dados_dissertacao$pearson_YFAS <- res_pred$pearson[1:nrow(dados_dissertacao)]
dados_dissertacao$pearson_BES <- res_pred$pearson[(nrow(dados_dissertacao)+1):nrow(res_pred)]
dados_dissertacao$raw_YFAS <- res_pred$raw[1:nrow(dados_dissertacao)]
dados_dissertacao$raw_BES <- res_pred$raw[(nrow(dados_dissertacao)+1):nrow(res_pred)]
mal_ajustados <- subset(dados_dissertacao,
pearson_YFAS   >  2    |
pearson_YFAS < -2    |
pearson_BES  >  2 |
pearson_BES  < -2
)
nrow(mal_ajustados)
mal_ajustados
# SAIDA DO MODELO
resumo <- summary(fit)
betas_YFAS <- round(resumo[[1]]$Regression, 4)
betas_BES <- round(resumo[[2]]$Regression, 4)
round(resumo$`Resp.Variable 1`$Power,4)
round(resumo$`Resp.Variable 1`$tau,4)
round(resumo$`Resp.Variable 2`$Power,4)
round(resumo$`Resp.Variable 2`$tau,4)
confint(fit)
beta_YFAS <- data.frame(name = rownames(resumo$`Resp.Variable 1`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 1`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[1:6,])[,1]),
ic_max = as.vector(exp(confint(fit)[1:6,])[,2]))
beta_YFAS
beta_BES <- data.frame(name = rownames(resumo$`Resp.Variable 2`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 2`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[7:12,])[,1]),
ic_max = as.vector(exp(confint(fit)[7:12,])[,2]))
beta_YFAS[,2:4] <- round(beta_YFAS[,2:4],2)
beta_BES[,2:4] <- round(beta_BES[,2:4],2)
beta_yale
beta_YFAS
beta_BES
table <- expand.grid(Grupo=levels(dados_dissertacao$grupo),
Momento=levels(dados_dissertacao$momento))
table
table4$lin_pred_YFAS <-
betas_YFAS$Estimate[1] +
betas_YFAS$Estimate[2]*I(Momento==levels(dados_dissertacao$momento)[2])+
betas_YFAS$Estimate[3]*I(Momento==levels(dados_dissertacao$momento)[3])+
betas_YFAS$Estimate[4]*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[5]*I(Momento==levels(dados_dissertacao$momento)[2])*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[6]*I(Momento==levels(dados_dissertacao$momento)[3])*I(Grupo==levels(dados_dissertacao$grupo)[2])
detach(table)
table <- expand.grid(Grupo=levels(dados_dissertacao$grupo),
Momento=levels(dados_dissertacao$momento))
attach(table)
table4$lin_pred_YFAS <-
betas_YFAS$Estimate[1] +
betas_YFAS$Estimate[2]*I(Momento==levels(dados_dissertacao$momento)[2])+
betas_YFAS$Estimate[3]*I(Momento==levels(dados_dissertacao$momento)[3])+
betas_YFAS$Estimate[4]*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[5]*I(Momento==levels(dados_dissertacao$momento)[2])*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[6]*I(Momento==levels(dados_dissertacao$momento)[3])*I(Grupo==levels(dados_dissertacao$grupo)[2])
table$lin_pred_YFAS <-
betas_YFAS$Estimate[1] +
betas_YFAS$Estimate[2]*I(Momento==levels(dados_dissertacao$momento)[2])+
betas_YFAS$Estimate[3]*I(Momento==levels(dados_dissertacao$momento)[3])+
betas_YFAS$Estimate[4]*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[5]*I(Momento==levels(dados_dissertacao$momento)[2])*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[6]*I(Momento==levels(dados_dissertacao$momento)[3])*I(Grupo==levels(dados_dissertacao$grupo)[2])
table$mean_pred_YFAS <- round(exp(table$lin_pred_YFAS),2)
table$lin_pred_YFAS <- round(table$lin_pred_YFAS,2)
table$lin_pred_BES <-
betas_BES$Estimate[1] +
betas_BES$Estimate[2]*I(Momento==levels(dados_dissertacao$momento)[2])+
betas_BES$Estimate[3]*I(Momento==levels(dados_dissertacao$momento)[3])+
betas_BES$Estimate[4]*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_BES$Estimate[5]*I(Momento==levels(dados_dissertacao$momento)[2])*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_BES$Estimate[6]*I(Momento==levels(dados_dissertacao$momento)[3])*I(Grupo==levels(dados_dissertacao$grupo)[2])
table$mean_pred_BES <- round(exp(table$lin_pred_BES),2)
table$lin_pred_BES <- round(table$lin_pred_BES,2)
detach(table)
tabela <- table4[,c(1,2,4,6)]
tabela <- table[,c(1,2,4,6)]
names(tabela) <- c('Grupo', 'Momento', 'YFAS predito', 'BES predito')
tabela
table_plot <- data.frame(Grupo = rep(table$Grupo,2),
Momento = rep(table$Momento,2),
Métrica = c(rep('YFAS',6),
rep('BES',6)),
Predito = c(table$mean_pred_YFAS,
table$mean_pred_BES))
table_plot
ggplot(table_plot, aes(x=Momento,
y=Predito,
group = Grupo))+
theme_bw() +
geom_line(aes(group=Grupo, linetype=Grupo)) +
theme(legend.position = 'top') +
#labs(title = "BES")+
xlab('Experimental moment') +
ylab('Estimate')+ geom_point() +
facet_wrap(~Métrica, scales = 'free')
pred_YFAS <- YFAS_taxa ~ momento + grupo + momento:grupo
pred_BES <- BES_taxa ~ momento + grupo + momento:grupo
library(mcglm)
library(Matrix)
library(tidyverse)
load("~/msc/3_th_mcglm/3_analise_de_dados/4_vicios_compulsoes/escala_unit/dados_dissertacao.RData")
dados$id
dados_dissertacao$id
sort(dados_dissertacao$id)
pred_YFAS <- YFAS_taxa ~ momento + grupo + momento:grupo
pred_BES <- BES_taxa ~ momento + grupo + momento:grupo
mc_mixed(~0 + factor(id), data = dados_dissertacao[1:10,])
dados_dissertacao[1:10,]$id
mc_mixed(~0 + factor(id), data = dados_dissertacao[1:20,])
dados_dissertacao[1:20,]$id
arrange(dados_dissertacao, id)
arrange(dados_dissertacao, id, momento, grupo)
dados_dissertacao <- arrange(dados_dissertacao, id, momento, grupo)
mc_mixed(~0 + factor(id), data = dados_dissertacao[1:20,])
pred_YFAS <- YFAS_taxa ~ momento + grupo + momento:grupo
pred_BES <- BES_taxa ~ momento + grupo + momento:grupo
Z0 <- mc_id(dados_dissertacao) # Identidade
Z1 <- mc_mixed(~0 + factor(id), data = dados_dissertacao[1:20,]) # individuo
fit <-
mcglm(linear_pred = c(pred_YFAS,
pred_BES),
matrix_pred = list(c(Z0,Z1),
c(Z0,Z1)),
link = c("logit", "logit"),
variance = c("binomialP", "binomialP"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 250,
tol = 1e-4),
power_fixed = c(F,F),
data = dados_dissertacao)
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,160))
pred_YFAS <- YFAS_taxa ~ momento + grupo + momento:grupo
pred_BES <- BES_taxa ~ momento + grupo + momento:grupo
Z0 <- mc_id(dados_dissertacao) # Identidade
Z1 <- mc_mixed(~0 + factor(id), data = dados_dissertacao[1:20,]) # individuo
Z1 <- mc_mixed(~0 + factor(id), data = dados_dissertacao) # individuo
fit <-
mcglm(linear_pred = c(pred_YFAS,
pred_BES),
matrix_pred = list(c(Z0,Z1),
c(Z0,Z1)),
link = c("logit", "logit"),
variance = c("binomialP", "binomialP"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 250,
tol = 1e-4),
power_fixed = c(F,F),
data = dados_dissertacao)
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,160))
summary(fit)
summary(fit)
coef(fit, type = 'beta')
coef(fit, type = 'tau')
coef(fit, type = 'power')
## chol(vcov) inversa
chol_inv <- Matrix::chol(fit$inv_C)
## Resíduos empilhados
residuos <- as.numeric(residuals(fit, type = 'raw'))
## Produto matricial
pearson <- as.numeric(chol_inv%*%residuos)
## Preditos
preditos <- fit$fitted
## Dataframe
res_pred <- data.frame(index = rep(1:nrow(dados_dissertacao),2),
resp = c(rep('YFAS', nrow(dados_dissertacao)),
rep('BES', nrow(dados_dissertacao))),
observado = c(dados_dissertacao$YFAS_taxa,
dados_dissertacao$BES_taxa),
preditos = preditos,
pearson = pearson,
raw = residuos
)
mean1 = MASS::fitdistr(res_pred$pearson[1:nrow(dados_dissertacao)],
densfun = "normal")$estimate[1]
sd1 = MASS::fitdistr(res_pred$pearson[1:nrow(dados_dissertacao)],
densfun = "normal")$estimate[2]
mean2 = MASS::fitdistr(res_pred$pearson[(nrow(dados_dissertacao)+1):nrow(res_pred)],
densfun = "normal")$estimate[1]
sd2 = MASS::fitdistr(res_pred$pearson[(nrow(dados_dissertacao)+1):nrow(res_pred)],
densfun = "normal")$estimate[2]
mean1
sd1
mean2
sd2
mean3 = MASS::fitdistr(res_pred$raw[1:nrow(dados_dissertacao)],
densfun = "normal")$estimate[1]
sd3 = MASS::fitdistr(res_pred$raw[1:nrow(dados_dissertacao)],
densfun = "normal")$estimate[2]
mean4 = MASS::fitdistr(res_pred$raw[(nrow(dados_dissertacao)+1):nrow(res_pred)],
densfun = "normal")$estimate[1]
sd4 = MASS::fitdistr(res_pred$raw[(nrow(dados_dissertacao)+1):nrow(res_pred)],
densfun = "normal")$estimate[2]
mean3
sd3
mean4
sd4
g1 <- ggplot(data = res_pred, aes(x=pearson))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo Pearson')
g2 <- ggplot(data = res_pred, aes(x=raw))+
geom_histogram(fill=1,alpha=0.5, col = 1)+
theme_bw()+
xlab('')+
ylab('')+
geom_vline(xintercept = 0, col = 2, lty = 2, lwd = 1)+
facet_wrap(~resp, scales = 'free') +
ggtitle('Resíduo cru')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1 <- ggplot(data = res_pred,
mapping = aes(sample = pearson)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('')+
ylab('Quantis amostrais') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred,
mapping = aes(sample = raw)) +
geom_qq(alpha = 0.5) + geom_qq_line(col = 2)+
theme_bw() +
xlab('Quantis teóricos')+
ylab('Quantis amostrais') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1 <- ggplot(data = res_pred, aes(y=pearson,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('')+
ylab('Resíduos') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=preditos))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('Preditos')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
g1 <- ggplot(data = res_pred, aes(y=pearson,x=index))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('')+
ylab('Índice') +
ggtitle('Resíduo Pearson') + facet_wrap(~resp, scales = 'free')
g2 <- ggplot(data = res_pred, aes(y=raw,x=index))+
geom_point(alpha=0.5)+
theme_bw()+
geom_smooth(col=2, method = 'loess', se=F)+
xlab('Índice')+
ylab('Resíduos') +
ggtitle('Resíduo cru') + facet_wrap(~resp, scales = 'free')
ggpubr::ggarrange(g1,g2, nrow = 2)
dados_dissertacao$pred_YFAS <- res_pred$preditos[1:nrow(dados_dissertacao)]
dados_dissertacao$pred_BES <- res_pred$preditos[(nrow(dados_dissertacao)+1):nrow(res_pred)]
dados_dissertacao$pearson_YFAS <- res_pred$pearson[1:nrow(dados_dissertacao)]
dados_dissertacao$pearson_BES <- res_pred$pearson[(nrow(dados_dissertacao)+1):nrow(res_pred)]
dados_dissertacao$raw_YFAS <- res_pred$raw[1:nrow(dados_dissertacao)]
dados_dissertacao$raw_BES <- res_pred$raw[(nrow(dados_dissertacao)+1):nrow(res_pred)]
mal_ajustados <- subset(dados_dissertacao,
pearson_YFAS   >  2    |
pearson_YFAS < -2    |
pearson_BES  >  2 |
pearson_BES  < -2
)
nrow(mal_ajustados)
mal_ajustados
# SAIDA DO MODELO
resumo <- summary(fit)
betas_YFAS <- round(resumo[[1]]$Regression, 4)
betas_BES <- round(resumo[[2]]$Regression, 4)
round(resumo$`Resp.Variable 1`$Power,4)
round(resumo$`Resp.Variable 1`$tau,4)
round(resumo$`Resp.Variable 2`$Power,4)
round(resumo$`Resp.Variable 2`$tau,4)
confint(fit)
beta_YFAS <- data.frame(name = rownames(resumo$`Resp.Variable 1`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 1`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[1:6,])[,1]),
ic_max = as.vector(exp(confint(fit)[1:6,])[,2]))
beta_BES <- data.frame(name = rownames(resumo$`Resp.Variable 2`$Regression),
exp_est = exp(round(resumo$`Resp.Variable 2`$Regression$Estimates,2)),
ic_min = as.vector(exp(confint(fit)[7:12,])[,1]),
ic_max = as.vector(exp(confint(fit)[7:12,])[,2]))
beta_YFAS[,2:4] <- round(beta_YFAS[,2:4],2)
beta_BES[,2:4] <- round(beta_BES[,2:4],2)
beta_YFAS
beta_BES
table <- expand.grid(Grupo=levels(dados_dissertacao$grupo),
Momento=levels(dados_dissertacao$momento))
attach(table)
table$lin_pred_YFAS <-
betas_YFAS$Estimate[1] +
betas_YFAS$Estimate[2]*I(Momento==levels(dados_dissertacao$momento)[2])+
betas_YFAS$Estimate[3]*I(Momento==levels(dados_dissertacao$momento)[3])+
betas_YFAS$Estimate[4]*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[5]*I(Momento==levels(dados_dissertacao$momento)[2])*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_YFAS$Estimate[6]*I(Momento==levels(dados_dissertacao$momento)[3])*I(Grupo==levels(dados_dissertacao$grupo)[2])
table$mean_pred_YFAS <- round(exp(table$lin_pred_YFAS),2)
table$lin_pred_YFAS <- round(table$lin_pred_YFAS,2)
table$lin_pred_BES <-
betas_BES$Estimate[1] +
betas_BES$Estimate[2]*I(Momento==levels(dados_dissertacao$momento)[2])+
betas_BES$Estimate[3]*I(Momento==levels(dados_dissertacao$momento)[3])+
betas_BES$Estimate[4]*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_BES$Estimate[5]*I(Momento==levels(dados_dissertacao$momento)[2])*I(Grupo==levels(dados_dissertacao$grupo)[2])+
betas_BES$Estimate[6]*I(Momento==levels(dados_dissertacao$momento)[3])*I(Grupo==levels(dados_dissertacao$grupo)[2])
table$mean_pred_BES <- round(exp(table$lin_pred_BES),2)
table$lin_pred_BES <- round(table$lin_pred_BES,2)
detach(table)
tabela <- table[,c(1,2,4,6)]
names(tabela) <- c('Grupo', 'Momento', 'YFAS predito', 'BES predito')
tabela
table_plot <- data.frame(Grupo = rep(table$Grupo,2),
Momento = rep(table$Momento,2),
Métrica = c(rep('YFAS',6),
rep('BES',6)),
Predito = c(table$mean_pred_YFAS,
table$mean_pred_BES))
ggplot(table_plot, aes(x=Momento,
y=Predito,
group = Grupo))+
theme_bw() +
geom_line(aes(group=Grupo, linetype=Grupo)) +
theme(legend.position = 'top') +
#labs(title = "BES")+
xlab('Experimental moment') +
ylab('Estimate')+ geom_point() +
facet_wrap(~Métrica, scales = 'free')
save.image("~/msc/3_th_mcglm/3_analise_de_dados/4_vicios_compulsoes/escala_unit/dados_dissertacao.RData")
# SAIDA DO MODELO
resumo <- summary(fit)
fit
#---------------------------------------------------------------
# DADOS
#---------------------------------------------------------------
# Diretório dos dados e biblioteca
library(mcglm)
library(Matrix)
library(tidyverse)
#---------------------------------------------------------------
# Leitura dos dados
load("~/msc/3_th_mcglm/3_analise_de_dados/4_vicios_compulsoes/escala_unit/dados_dissertacao.RData")
#id - fator identificador de paciente
#grupo - fator identiricador de grupo (Placebo, Probiótico)
#momento - fator identificador de momento (T0 (preop), T1 (3 meses), T2 (1 ano))
#YFAS - número de sintomas que caracterizam vício, varia de 0 a 7
#BES - escore que caracteriza compulsão, varia de 0 a 46
#YFAS_taxa - proporção de sintomas de caracterizam vício
#BES_taxa - proporção do escore que caracteriza compulsão
#---------------------------------------------------------------
# EXPLORATÓRIA
#---------------------------------------------------------------
desc <- dados_dissertacao[,c('grupo','momento',
'YFAS_taxa','BES_taxa')] %>%
group_by(grupo, momento) %>%
summarise(n_yale = length(YFAS_taxa),
media_yale = round(mean(YFAS_taxa),2),
sd_yale = round(sd(YFAS_taxa),2),
n_ecap = length(BES_taxa),
media_ecap = round(mean(BES_taxa),2),
sd_ecap = round(sd(BES_taxa),2))
desc
#---------------------------------------------------------------
a <- ggplot(dados_dissertacao, aes(x = YFAS_taxa)) +
geom_histogram(col = 1, fill='white',
breaks = hist(dados_dissertacao$YFAS_taxa,
plot = F)$breaks) +
xlab('YFAS') +
ylab('Frequência') +
xlim(c(0,1))+
theme_bw() +
ggtitle('a')
b <- ggplot(data = dados_dissertacao,
mapping = aes_string(x='grupo', y='YFAS_taxa')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
theme_light() +
stat_summary(fun=mean,
geom="point",
shape=8,
size=2)+
xlab('Grupo') +
ylab('YFAS') +
ylim(c(0,1))+
ggtitle('b')
c <- ggplot(data = dados_dissertacao,
mapping = aes_string(x='momento', y='YFAS_taxa')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
theme_light() +
stat_summary(fun=mean,
geom="point",
shape=8,
size=2)+
xlab('Momento') +
ylab('YFAS') +
ylim(c(0,1))+
ggtitle('c')
d <- ggplot(dados_dissertacao, aes(x = BES_taxa)) +
geom_histogram(col = 1, fill='white',
breaks = hist(dados_dissertacao$BES_taxa,
plot = F)$breaks) +
xlab('BES') +
ylab('Frequência') +
xlim(c(0,1))+
theme_bw() +
ggtitle('d')
e <- ggplot(data = dados_dissertacao,
mapping = aes_string(x='grupo', y='BES_taxa')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
theme_light() +
stat_summary(fun=mean,
geom="point",
shape=8,
size=2)+
xlab('Grupo') +
ylab('BES') +
ylim(c(0,1))+
ggtitle('e')
f <- ggplot(data = dados_dissertacao,
mapping = aes_string(x='momento', y='BES_taxa')) +
stat_boxplot(geom ='errorbar')+
geom_boxplot(alpha = 1)+
theme_light() +
stat_summary(fun=mean,
geom="point",
shape=8,
size=2)+
xlab('Momento') +
ylab('BES') +
ylim(c(0,1))+
ggtitle('f')
g <- ggpubr::ggarrange(a,b,c,d,e,f,
nrow = 2, ncol = 3)
#---------------------------------------------------------------
ggsave(filename='descritiva.pdf',
plot=g, device="pdf",
path=getwd(),
dpi=500,
height = 4,
width = 7)
#---------------------------------------------------------------
#---------------------------------------------------------------
# AJUSTE
#---------------------------------------------------------------
# Preditor
pred_YFAS <- YFAS_taxa ~ momento + grupo + momento:grupo
pred_BES <- BES_taxa ~ momento + grupo + momento:grupo
#----------------------------------------------------------------
# Matrix linear predictor
Z0 <- mc_id(dados_dissertacao) # Identidade
Z1 <- mc_mixed(~0 + factor(id), data = dados_dissertacao) # individuo
#----------------------------------------------------------------
# Ajuste
fit <-
mcglm(linear_pred = c(pred_YFAS,
pred_BES),
matrix_pred = list(c(Z0,Z1),
c(Z0,Z1)),
link = c("logit", "logit"),
variance = c("binomialP", "binomialP"),
control_algorithm = list(verbose = T,
tuning = 0.1,
max_iter = 110,
tol = 1e-4),
power_fixed = c(F,F),
data = dados_dissertacao)
#----------------------------------------------------------------
matplot(fit$IterationCovariance, type = 'l', xlim = c(1,160))
#----------------------------------------------------------------
# Resumo do modelo
summary(fit)
coef(fit, type = 'beta')
coef(fit, type = 'tau')
coef(fit, type = 'power')
#----------------------------------------------------------------
